{
    "name": "Copy_from_REST_Keyset_Parallel",
    "properties": {
        "activities": [
            {
                "name": "Until-IsFinished-becomes-True",
                "type": "Until",
                "dependsOn": [
                    {
                        "activity": "Set-BatchInterval",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(variables('IsFinished'), bool(1))",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "If-20Mins-Past-LatestTokenGeneratedAt",
                            "type": "IfCondition",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@greaterOrEquals(addMinutes(utcNow(), -20), variables('LatestTokenGeneratedAt'))",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Update-LatestTokenGeneratedAt",
                                        "type": "SetVariable",
                                        "dependsOn": [],
                                        "userProperties": [],
                                        "typeProperties": {
                                            "variableName": "LatestTokenGeneratedAt",
                                            "value": {
                                                "value": "@string(utcNow())",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    {
                                        "name": "Refresh-AccessToken",
                                        "type": "WebActivity",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@pipeline().parameters.AuthURL",
                                                "type": "Expression"
                                            },
                                            "method": "POST",
                                            "body": {
                                                "grant_type": "client_credentials"
                                            },
                                            "authentication": {
                                                "type": "Basic",
                                                "username": {
                                                    "value": "@pipeline().parameters.ClientId",
                                                    "type": "Expression"
                                                },
                                                "password": {
                                                    "type": "AzureKeyVaultSecret",
                                                    "store": {
                                                        "referenceName": "LS_KeyVault",
                                                        "type": "LinkedServiceReference"
                                                    },
                                                    "secretName": {
                                                        "value": "@pipeline().parameters.SecretName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "Update-AccessToken",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "userProperties": [],
                                        "typeProperties": {
                                            "variableName": "AccessToken",
                                            "value": {
                                                "value": "Bearer @{activity('Refresh-AccessToken').output.access_token}",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "timeout": "0.12:00:00"
                }
            },
            {
                "name": "Set-PartitionSize",
                "type": "SetVariable",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "NumberOfPartitions",
                    "value": {
                        "value": "@if(greater(mod(int(pipeline().parameters.TotalCount), int(variables('PartitionSize'))), 0), string(add(div(int(pipeline().parameters.TotalCount), int(variables('PartitionSize'))), 1)), string(div(int(pipeline().parameters.TotalCount), int(variables('PartitionSize')))))",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set-BatchInterval",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Set-IsFinished-to-False",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set-LatestTokenGeneratedAt",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set-PartitionSize",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set-AccessToken",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "BatchSize",
                    "value": {
                        "value": "@string(div(sub(int(pipeline().parameters.MaxChangeVersion), int(pipeline().parameters.MinChangeVersion)), int(variables('NumberOfPartitions'))))",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Loop-through-Batch-Intervals",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Set-BatchInterval",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@range(0, int(variables('NumberOfPartitions')))",
                        "type": "Expression"
                    },
                    "isSequential": false,
                    "batchCount": 2,
                    "activities": [
                        {
                            "name": "Get-TotalCount-in-Batch",
                            "type": "WebActivity",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "url": {
                                    "value": "@{pipeline().parameters.ChangedEntityURL}MinChangeVersion=@{mul(item(), int(variables('BatchSize')))}&MaxChangeVersion=@{mul(add(item(), 1), int(variables('BatchSize')))}&totalCount=true",
                                    "type": "Expression"
                                },
                                "method": "GET",
                                "headers": {
                                    "Authorization": {
                                        "value": "@variables('AccessToken')",
                                        "type": "Expression"
                                    }
                                },
                                "body": {
                                    "grant_type": "client_credentials"
                                }
                            }
                        },
                        {
                            "name": "If-TotalCount-in-Batch-GreaterThan-Zero",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "Get-TotalCount-in-Batch",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@greater(int(activity('Get-TotalCount-in-Batch').output.ADFWebActivityResponseHeaders['total-count']), 0)",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Copy-Upserts-JSON-to-ADLS",
                                        "type": "Copy",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken-for-Batch",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "RestSource",
                                                "httpRequestTimeout": "00:01:40",
                                                "requestInterval": "00.00:00:00.010",
                                                "requestMethod": "GET",
                                                "additionalHeaders": {
                                                    "Authorization": {
                                                        "value": "Bearer @{activity('Refresh-AccessToken-for-Batch').output.access_token}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "paginationRules": {
                                                    "QueryParameters.{offset}": {
                                                        "value": "Range:0:@{int(activity('Get-TotalCount-in-Batch').output.ADFWebActivityResponseHeaders['total-count'])}:@{pipeline().parameters.ApiLimit}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "sink": {
                                                "type": "JsonSink",
                                                "storeSettings": {
                                                    "type": "AzureBlobFSWriteSettings"
                                                },
                                                "formatSettings": {
                                                    "type": "JsonWriteSettings",
                                                    "filePattern": "setOfObjects"
                                                }
                                            },
                                            "enableStaging": false
                                        },
                                        "inputs": [
                                            {
                                                "referenceName": "DS_REST_Anonymous",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "BaseURL": {
                                                        "value": "@{pipeline().parameters.ChangedEntityURL}MinChangeVersion=@{mul(item(), int(variables('BatchSize')))}&MaxChangeVersion=@{mul(add(item(), 1), int(variables('BatchSize')))}&limit=@{pipeline().parameters.ApiLimit}&offset={offset}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "referenceName": "DS_JSON",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "stage": "1",
                                                    "path": {
                                                        "value": "@pipeline().parameters.UpsertsSinkPath",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "name": "Refresh-AccessToken-for-Batch",
                                        "type": "WebActivity",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@pipeline().parameters.AuthURL",
                                                "type": "Expression"
                                            },
                                            "method": "POST",
                                            "body": {
                                                "grant_type": "client_credentials"
                                            },
                                            "authentication": {
                                                "type": "Basic",
                                                "username": {
                                                    "value": "@pipeline().parameters.ClientId",
                                                    "type": "Expression"
                                                },
                                                "password": {
                                                    "type": "AzureKeyVaultSecret",
                                                    "store": {
                                                        "referenceName": "LS_KeyVault",
                                                        "type": "LinkedServiceReference"
                                                    },
                                                    "secretName": {
                                                        "value": "@pipeline().parameters.SecretName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "Set-AccessToken-for-Batch",
                                        "type": "SetVariable",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken-for-Batch",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "userProperties": [],
                                        "typeProperties": {
                                            "variableName": "AccessToken",
                                            "value": {
                                                "value": "Bearer @{activity('Refresh-AccessToken-for-Batch').output.access_token}",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "If-AuthError-then-Retry-Batch",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "If-TotalCount-in-Batch-GreaterThan-Zero",
                                    "dependencyConditions": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@contains(activity('Copy-Upserts-JSON-to-ADLS').output.errors[0], 'status code 401 Unauthorized')",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Copy-Upserts-JSON-to-ADLS-First-Half",
                                        "type": "Copy",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken-for-First-Half",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "RestSource",
                                                "httpRequestTimeout": "00:01:40",
                                                "requestInterval": "00.00:00:00.010",
                                                "requestMethod": "GET",
                                                "additionalHeaders": {
                                                    "Authorization": {
                                                        "value": "Bearer @{activity('Refresh-AccessToken-for-First-Half').output.access_token}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "paginationRules": {
                                                    "QueryParameters.{offset}": {
                                                        "value": "Range:0:@{int(activity('Get-TotalCount-in-Batch').output.ADFWebActivityResponseHeaders['total-count'])}:@{pipeline().parameters.ApiLimit}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "sink": {
                                                "type": "JsonSink",
                                                "storeSettings": {
                                                    "type": "AzureBlobFSWriteSettings"
                                                },
                                                "formatSettings": {
                                                    "type": "JsonWriteSettings",
                                                    "filePattern": "setOfObjects"
                                                }
                                            },
                                            "enableStaging": false
                                        },
                                        "inputs": [
                                            {
                                                "referenceName": "DS_REST_Anonymous",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "BaseURL": {
                                                        "value": "@{pipeline().parameters.ChangedEntityURL}MinChangeVersion=@{mul(item(), int(variables('BatchSize')))}&MaxChangeVersion=@{mul(add(item(), 1), int(variables('BatchSize')))}&limit=@{pipeline().parameters.ApiLimit}&offset={offset}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "referenceName": "DS_JSON",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "stage": "1",
                                                    "path": {
                                                        "value": "@pipeline().parameters.UpsertsSinkPath",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "name": "Refresh-AccessToken-for-First-Half",
                                        "type": "WebActivity",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@pipeline().parameters.AuthURL",
                                                "type": "Expression"
                                            },
                                            "method": "POST",
                                            "body": {
                                                "grant_type": "client_credentials"
                                            },
                                            "authentication": {
                                                "type": "Basic",
                                                "username": {
                                                    "value": "@pipeline().parameters.ClientId",
                                                    "type": "Expression"
                                                },
                                                "password": {
                                                    "type": "AzureKeyVaultSecret",
                                                    "store": {
                                                        "referenceName": "LS_KeyVault",
                                                        "type": "LinkedServiceReference"
                                                    },
                                                    "secretName": {
                                                        "value": "@pipeline().parameters.SecretName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "Copy-Upserts-JSON-to-ADLS-Second-Half",
                                        "type": "Copy",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken-for-Second-Half",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "RestSource",
                                                "httpRequestTimeout": "00:01:40",
                                                "requestInterval": "00.00:00:00.010",
                                                "requestMethod": "GET",
                                                "additionalHeaders": {
                                                    "Authorization": {
                                                        "value": "Bearer @{activity('Refresh-AccessToken-for-Second-Half').output.access_token}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "paginationRules": {
                                                    "QueryParameters.{offset}": {
                                                        "value": "Range:0:@{int(activity('Get-TotalCount-in-Batch').output.ADFWebActivityResponseHeaders['total-count'])}:@{pipeline().parameters.ApiLimit}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "sink": {
                                                "type": "JsonSink",
                                                "storeSettings": {
                                                    "type": "AzureBlobFSWriteSettings"
                                                },
                                                "formatSettings": {
                                                    "type": "JsonWriteSettings",
                                                    "filePattern": "setOfObjects"
                                                }
                                            },
                                            "enableStaging": false
                                        },
                                        "inputs": [
                                            {
                                                "referenceName": "DS_REST_Anonymous",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "BaseURL": {
                                                        "value": "@{pipeline().parameters.ChangedEntityURL}MinChangeVersion=@{mul(item(), int(variables('BatchSize')))}&MaxChangeVersion=@{mul(add(item(), 1), int(variables('BatchSize')))}&limit=@{pipeline().parameters.ApiLimit}&offset={offset}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "referenceName": "DS_JSON",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "stage": "1",
                                                    "path": {
                                                        "value": "@pipeline().parameters.UpsertsSinkPath",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "name": "Refresh-AccessToken-for-Second-Half",
                                        "type": "WebActivity",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@pipeline().parameters.AuthURL",
                                                "type": "Expression"
                                            },
                                            "method": "POST",
                                            "body": {
                                                "grant_type": "client_credentials"
                                            },
                                            "authentication": {
                                                "type": "Basic",
                                                "username": {
                                                    "value": "@pipeline().parameters.ClientId",
                                                    "type": "Expression"
                                                },
                                                "password": {
                                                    "type": "AzureKeyVaultSecret",
                                                    "store": {
                                                        "referenceName": "LS_KeyVault",
                                                        "type": "LinkedServiceReference"
                                                    },
                                                    "secretName": {
                                                        "value": "@pipeline().parameters.SecretName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "If-GatewayTimeoutError-then-Retry-Batch",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "If-TotalCount-in-Batch-GreaterThan-Zero",
                                    "dependencyConditions": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@contains(activity('Copy-Upserts-JSON-to-ADLS').output.errors[0], 'status code 504 GatewayTimeout')",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Copy-Upserts-JSON-to-ADLS-First-Half-Gateway",
                                        "type": "Copy",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken-for-First-Half-Gateway",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "RestSource",
                                                "httpRequestTimeout": "00:01:40",
                                                "requestInterval": "00.00:00:00.010",
                                                "requestMethod": "GET",
                                                "additionalHeaders": {
                                                    "Authorization": {
                                                        "value": "Bearer @{activity('Refresh-AccessToken-for-First-Half-Gateway').output.access_token}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "paginationRules": {
                                                    "QueryParameters.{offset}": {
                                                        "value": "Range:0:@{int(activity('Get-TotalCount-in-Batch').output.ADFWebActivityResponseHeaders['total-count'])}:@{pipeline().parameters.ApiLimit}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "sink": {
                                                "type": "JsonSink",
                                                "storeSettings": {
                                                    "type": "AzureBlobFSWriteSettings"
                                                },
                                                "formatSettings": {
                                                    "type": "JsonWriteSettings",
                                                    "filePattern": "setOfObjects"
                                                }
                                            },
                                            "enableStaging": false
                                        },
                                        "inputs": [
                                            {
                                                "referenceName": "DS_REST_Anonymous",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "BaseURL": {
                                                        "value": "@{pipeline().parameters.ChangedEntityURL}MinChangeVersion=@{mul(item(), int(variables('BatchSize')))}&MaxChangeVersion=@{mul(add(item(), 1), int(variables('BatchSize')))}&limit=@{pipeline().parameters.ApiLimit}&offset={offset}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "referenceName": "DS_JSON",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "stage": "1",
                                                    "path": {
                                                        "value": "@pipeline().parameters.UpsertsSinkPath",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "name": "Refresh-AccessToken-for-First-Half-Gateway",
                                        "type": "WebActivity",
                                        "dependsOn": [
                                            {
                                                "activity": "Wait-for-2-Minutes",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@pipeline().parameters.AuthURL",
                                                "type": "Expression"
                                            },
                                            "method": "POST",
                                            "body": {
                                                "grant_type": "client_credentials"
                                            },
                                            "authentication": {
                                                "type": "Basic",
                                                "username": {
                                                    "value": "@pipeline().parameters.ClientId",
                                                    "type": "Expression"
                                                },
                                                "password": {
                                                    "type": "AzureKeyVaultSecret",
                                                    "store": {
                                                        "referenceName": "LS_KeyVault",
                                                        "type": "LinkedServiceReference"
                                                    },
                                                    "secretName": {
                                                        "value": "@pipeline().parameters.SecretName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "Copy-Upserts-JSON-to-ADLS-Second-Half-Gateway",
                                        "type": "Copy",
                                        "dependsOn": [
                                            {
                                                "activity": "Refresh-AccessToken-for-Second-Half-Gateway",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "RestSource",
                                                "httpRequestTimeout": "00:01:40",
                                                "requestInterval": "00.00:00:00.010",
                                                "requestMethod": "GET",
                                                "additionalHeaders": {
                                                    "Authorization": {
                                                        "value": "Bearer @{activity('Refresh-AccessToken-for-Second-Half-Gateway').output.access_token}",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "paginationRules": {
                                                    "QueryParameters.{offset}": {
                                                        "value": "Range:0:@{int(activity('Get-TotalCount-in-Batch').output.ADFWebActivityResponseHeaders['total-count'])}:@{pipeline().parameters.ApiLimit}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "sink": {
                                                "type": "JsonSink",
                                                "storeSettings": {
                                                    "type": "AzureBlobFSWriteSettings"
                                                },
                                                "formatSettings": {
                                                    "type": "JsonWriteSettings",
                                                    "filePattern": "setOfObjects"
                                                }
                                            },
                                            "enableStaging": false
                                        },
                                        "inputs": [
                                            {
                                                "referenceName": "DS_REST_Anonymous",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "BaseURL": {
                                                        "value": "@{pipeline().parameters.ChangedEntityURL}MinChangeVersion=@{mul(item(), int(variables('BatchSize')))}&MaxChangeVersion=@{mul(add(item(), 1), int(variables('BatchSize')))}&limit=@{pipeline().parameters.ApiLimit}&offset={offset}",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "outputs": [
                                            {
                                                "referenceName": "DS_JSON",
                                                "type": "DatasetReference",
                                                "parameters": {
                                                    "stage": "1",
                                                    "path": {
                                                        "value": "@pipeline().parameters.UpsertsSinkPath",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "name": "Refresh-AccessToken-for-Second-Half-Gateway",
                                        "type": "WebActivity",
                                        "dependsOn": [
                                            {
                                                "activity": "Copy-Upserts-JSON-to-ADLS-First-Half-Gateway",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "7.00:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "url": {
                                                "value": "@pipeline().parameters.AuthURL",
                                                "type": "Expression"
                                            },
                                            "method": "POST",
                                            "body": {
                                                "grant_type": "client_credentials"
                                            },
                                            "authentication": {
                                                "type": "Basic",
                                                "username": {
                                                    "value": "@pipeline().parameters.ClientId",
                                                    "type": "Expression"
                                                },
                                                "password": {
                                                    "type": "AzureKeyVaultSecret",
                                                    "store": {
                                                        "referenceName": "LS_KeyVault",
                                                        "type": "LinkedServiceReference"
                                                    },
                                                    "secretName": {
                                                        "value": "@pipeline().parameters.SecretName",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "Wait-for-2-Minutes",
                                        "type": "Wait",
                                        "dependsOn": [],
                                        "userProperties": [],
                                        "typeProperties": {
                                            "waitTimeInSeconds": 120
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "name": "Set-IsFinished-to-False",
                "type": "SetVariable",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "IsFinished",
                    "value": {
                        "value": "@bool(0)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set-IsFinished-to-True",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Loop-through-Batch-Intervals",
                        "dependencyConditions": [
                            "Completed"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "IsFinished",
                    "value": {
                        "value": "@bool(1)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Set-LatestTokenGeneratedAt",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get-AccessToken",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "LatestTokenGeneratedAt",
                    "value": {
                        "value": "@string(utcNow())",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Get-AccessToken",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@pipeline().parameters.AuthURL",
                        "type": "Expression"
                    },
                    "method": "POST",
                    "body": {
                        "grant_type": "client_credentials"
                    },
                    "authentication": {
                        "type": "Basic",
                        "username": {
                            "value": "@pipeline().parameters.ClientId",
                            "type": "Expression"
                        },
                        "password": {
                            "type": "AzureKeyVaultSecret",
                            "store": {
                                "referenceName": "LS_KeyVault",
                                "type": "LinkedServiceReference"
                            },
                            "secretName": {
                                "value": "@pipeline().parameters.SecretName",
                                "type": "Expression"
                            }
                        }
                    }
                }
            },
            {
                "name": "Set-AccessToken",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get-AccessToken",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "AccessToken",
                    "value": {
                        "value": "Bearer @{activity('Get-AccessToken').output.access_token}",
                        "type": "Expression"
                    }
                }
            }
        ],
        "parameters": {
            "TotalCount": {
                "type": "string"
            },
            "AuthURL": {
                "type": "string"
            },
            "ClientId": {
                "type": "string"
            },
            "SecretName": {
                "type": "string"
            },
            "ChangedEntityURL": {
                "type": "string"
            },
            "ApiLimit": {
                "type": "string"
            },
            "UpsertsSinkPath": {
                "type": "string"
            },
            "MinChangeVersion": {
                "type": "string"
            },
            "MaxChangeVersion": {
                "type": "string"
            }
        },
        "variables": {
            "AccessToken": {
                "type": "String"
            },
            "PartitionSize": {
                "type": "String",
                "defaultValue": "10000"
            },
            "BatchSize": {
                "type": "String"
            },
            "NumberOfPartitions": {
                "type": "String"
            },
            "IsFinished": {
                "type": "Boolean"
            },
            "LatestTokenGeneratedAt": {
                "type": "String"
            }
        },
        "folder": {
            "name": "Modules/Ed-Fi/Artifacts"
        },
        "annotations": [],
        "lastPublishTime": "2022-11-09T08:29:18Z"
    }
}